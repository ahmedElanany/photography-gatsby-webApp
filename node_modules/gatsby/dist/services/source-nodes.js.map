{"version":3,"sources":["../../src/services/source-nodes.ts"],"names":["sourceNodes","parentSpan","webhookBody","store","activity","reporter","activityTimer","start","span","verbose","getState","nodes","size","nodesByType","entries","map","type","join","end","deletedPages","changedPages"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;AACA;AAEO,eAAeA,WAAf,CAA2B;AAChCC,EAAAA,UADgC;AAEhCC,EAAAA,WAFgC;AAGhCC,EAAAA;AAHgC,CAA3B,EAOJ;AACD,gCAAYA,KAAZ;;AAEA,QAAMC,QAAQ,GAAGC,kBAASC,aAAT,CAAwB,4BAAxB,EAAqD;AACpEL,IAAAA;AADoE,GAArD,CAAjB;;AAGAG,EAAAA,QAAQ,CAACG,KAAT,GANC,CAOD;;AACA,QAAM,0BAA+B;AACnCN,IAAAA,UAAU,EAAEG,QAAQ,CAACI,IADc;AAEnC;AACAN,IAAAA;AAHmC,GAA/B,CAAN;;AAMAG,oBAASI,OAAT,CACG,YAAWN,KAAK,CAACO,QAAN,GAAiBC,KAAjB,CAAuBC,IAAK,eACtCT,KAAK,CAACO,QAAN,GAAiBG,WAAjB,CAA6BD,IAC9B,YAAW,CAAC,GAAGT,KAAK,CAACO,QAAN,GAAiBG,WAAjB,CAA6BC,OAA7B,EAAJ,EACTC,GADS,CACL,CAAC,CAACC,IAAD,EAAOL,KAAP,CAAD,KAAmBK,IAAI,GAAI,GAAR,GAAaL,KAAK,CAACC,IADjC,EAETK,IAFS,CAEH,IAFG,CAEE,GALhB,EAdC,CAsBD;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAb,EAAAA,QAAQ,CAACc,GAAT;AACA,SAAO;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,YAAY,EAAE;AAFT,GAAP;AAID","sourcesContent":["import sourceNodesAndRemoveStaleNodes from \"../utils/source-nodes\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { assertStore } from \"../utils/assert-store\"\n// import { findChangedPages } from \"../utils/check-for-changed-pages\"\n// import { IGatsbyPage } from \"../redux/types\"\n\nexport async function sourceNodes({\n  parentSpan,\n  webhookBody,\n  store,\n}: Partial<IDataLayerContext>): Promise<{\n  deletedPages: string[]\n  changedPages: string[]\n}> {\n  assertStore(store)\n\n  const activity = reporter.activityTimer(`source and transform nodes`, {\n    parentSpan,\n  })\n  activity.start()\n  // const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n  await sourceNodesAndRemoveStaleNodes({\n    parentSpan: activity.span,\n    // deferNodeMutation: !!(webhookBody && Object.keys(webhookBody).length), // Coming soon\n    webhookBody,\n  })\n\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types: [${[...store.getState().nodesByType.entries()]\n      .map(([type, nodes]) => type + `:` + nodes.size)\n      .join(`, `)}]`\n  )\n\n  // reporter.info(`Checking for deleted pages`)\n\n  // Add this back when we enable page creation outside of onCreatePages\n  // const tim = reporter.activityTimer(`Checking for changed pages`)\n  // tim.start()\n\n  // const { changedPages, deletedPages } = findChangedPages(\n  //   currentPages,\n  //   store.getState().pages\n  // )\n\n  // reporter.info(\n  //   `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  // )\n\n  // reporter.info(\n  //   `Found ${changedPages.length} changed page${\n  //     changedPages.length === 1 ? `` : `s`\n  //   }`\n  // )\n  // tim.end()\n\n  activity.end()\n  return {\n    deletedPages: [],\n    changedPages: [],\n  }\n}\n"],"file":"source-nodes.js"}