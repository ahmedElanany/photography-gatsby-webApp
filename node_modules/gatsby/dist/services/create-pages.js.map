{"version":3,"sources":["../../src/services/create-pages.ts"],"names":["createPages","parentSpan","gatsbyNodeGraphQLFunction","store","activity","reporter","activityTimer","start","graphql","traceId","waitForCascadingActions","span","verbose","getState","nodes","size","nodesByType","get","end","changedPages","deletedPages"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEO,eAAeA,WAAf,CAA2B;AAChCC,EAAAA,UADgC;AAEhCC,EAAAA,yBAFgC;AAGhCC,EAAAA;AAHgC,CAA3B,EAOJ;AAAA;;AACD,gCAAYA,KAAZ;;AACA,QAAMC,QAAQ,GAAGC,kBAASC,aAAT,CAAwB,aAAxB,EAAsC;AACrDL,IAAAA;AADqD,GAAtC,CAAjB;;AAGAG,EAAAA,QAAQ,CAACG,KAAT,GALC,CAMD;AACA;;AAEA,QAAM,4BACH,aADG,EAEJ;AACEC,IAAAA,OAAO,EAAEN,yBADX;AAEEO,IAAAA,OAAO,EAAG,qBAFZ;AAGEC,IAAAA,uBAAuB,EAAE,IAH3B;AAIET,IAAAA,UAAU,EAAEG,QAAQ,CAACO;AAJvB,GAFI,EAQJ;AAAEP,IAAAA;AAAF,GARI,CAAN;;AAUAC,oBAASO,OAAT,CACG,YAAWT,KAAK,CAACU,QAAN,GAAiBC,KAAjB,CAAuBC,IAAK,eACtCZ,KAAK,CAACU,QAAN,GAAiBG,WAAjB,CAA6BD,IAC9B,eAFD,yBAGEZ,KAAK,CAACU,QAAN,GAAiBG,WAHnB,oFAGE,sBAA8BC,GAA9B,CAAmC,UAAnC,CAHF,2DAGE,uBAA+CF,IAChD,iBALH;;AAOAX,EAAAA,QAAQ,CAACc,GAAT,GA1BC,CA4BD;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,YAAY,EAAE;AAFT,GAAP;AAID","sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { IDataLayerContext } from \"../state-machines/data-layer/types\"\nimport { assertStore } from \"../utils/assert-store\"\n\nexport async function createPages({\n  parentSpan,\n  gatsbyNodeGraphQLFunction,\n  store,\n}: Partial<IDataLayerContext>): Promise<{\n  deletedPages: string[]\n  changedPages: string[]\n}> {\n  assertStore(store)\n  const activity = reporter.activityTimer(`createPages`, {\n    parentSpan,\n  })\n  activity.start()\n  // const timestamp = Date.now()\n  // const currentPages = new Map<string, IGatsbyPage>(store.getState().pages)\n\n  await apiRunnerNode(\n    `createPages`,\n    {\n      graphql: gatsbyNodeGraphQLFunction,\n      traceId: `initial-createPages`,\n      waitForCascadingActions: true,\n      parentSpan: activity.span,\n    },\n    { activity }\n  )\n  reporter.verbose(\n    `Now have ${store.getState().nodes.size} nodes with ${\n      store.getState().nodesByType.size\n    } types, and ${\n      store.getState().nodesByType?.get(`SitePage`)?.size\n    } SitePage nodes`\n  )\n  activity.end()\n\n  // reporter.info(`Checking for deleted pages`)\n\n  // const deletedPages = deleteUntouchedPages(store.getState().pages, timestamp)\n\n  // reporter.info(\n  //   `Deleted ${deletedPages.length} page${deletedPages.length === 1 ? `` : `s`}`\n  // )\n\n  // const tim = reporter.activityTimer(`Checking for changed pages`)\n  // tim.start()\n\n  // const { changedPages } = findChangedPages(\n  //   currentPages,\n  //   store.getState().pages\n  // )\n\n  // reporter.info(\n  //   `Found ${changedPages.length} changed page${\n  //     changedPages.length === 1 ? `` : `s`\n  //   }`\n  // )\n  // tim.end()\n\n  return {\n    changedPages: [],\n    deletedPages: [],\n  }\n}\n"],"file":"create-pages.js"}