{"version":3,"sources":["../../../src/state-machines/data-layer/actions.ts"],"names":["concatUnique","array1","array2","Array","from","Set","concat","assignChangedPages","context","event","pagesToBuild","data","changedPages","pagesToDelete","deletedPages","assignGatsbyNodeGraphQL","gatsbyNodeGraphQLFunction","store","reporter","dataLayerActions"],"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AAEA;;AAEA,MAAMA,YAAY,GAAG,CAAIC,MAAW,GAAG,EAAlB,EAAsBC,MAAW,GAAG,EAApC,KACnBC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,MAAM,CAACK,MAAP,CAAcJ,MAAd,CAAR,CAAX,CADF;;AAOO,MAAMK,kBAAsC,GAAG,oBAMpD,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACpB,SAAO;AACLC,IAAAA,YAAY,EAAEV,YAAY,CAACQ,OAAO,CAACE,YAAT,EAAuBD,KAAK,CAACE,IAAN,CAAWC,YAAlC,CADrB;AAELC,IAAAA,aAAa,EAAEb,YAAY,CAACQ,OAAO,CAACK,aAAT,EAAwBJ,KAAK,CAACE,IAAN,CAAWG,YAAnC;AAFtB,GAAP;AAID,CAXqD,CAA/C;;AAaA,MAAMC,uBAA2C,GAAG,oBAEzD;AACAC,EAAAA,yBAAyB,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkC;AAC3D,kCAAYA,KAAZ;AACA,WAAO,8CAAoBA,KAApB,EAA2BC,iBAA3B,CAAP;AACD;AAJD,CAFyD,CAApD;;AASA,MAAMC,gBAGZ,GAAG;AACFZ,EAAAA,kBADE;AAEFQ,EAAAA;AAFE,CAHG","sourcesContent":["import {\n  assign,\n  AnyEventObject,\n  ActionFunction,\n  AssignAction,\n  DoneInvokeEvent,\n  ActionFunctionMap,\n} from \"xstate\"\nimport { createGraphQLRunner } from \"../../bootstrap/create-graphql-runner\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { IDataLayerContext } from \"./types\"\nimport { assertStore } from \"../../utils/assert-store\"\n\nconst concatUnique = <T>(array1: T[] = [], array2: T[] = []): T[] =>\n  Array.from(new Set(array1.concat(array2)))\n\ntype BuildMachineAction =\n  | ActionFunction<IDataLayerContext, any>\n  | AssignAction<IDataLayerContext, any>\n\nexport const assignChangedPages: BuildMachineAction = assign<\n  IDataLayerContext,\n  DoneInvokeEvent<{\n    changedPages: string[]\n    deletedPages: string[]\n  }>\n>((context, event) => {\n  return {\n    pagesToBuild: concatUnique(context.pagesToBuild, event.data.changedPages),\n    pagesToDelete: concatUnique(context.pagesToDelete, event.data.deletedPages),\n  }\n})\n\nexport const assignGatsbyNodeGraphQL: BuildMachineAction = assign<\n  IDataLayerContext\n>({\n  gatsbyNodeGraphQLFunction: ({ store }: IDataLayerContext) => {\n    assertStore(store)\n    return createGraphQLRunner(store, reporter)\n  },\n})\n\nexport const dataLayerActions: ActionFunctionMap<\n  IDataLayerContext,\n  AnyEventObject\n> = {\n  assignChangedPages,\n  assignGatsbyNodeGraphQL,\n}\n"],"file":"actions.js"}