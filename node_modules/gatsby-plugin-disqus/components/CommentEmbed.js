"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _inheritsLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/inheritsLoose"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _jsxFileName = "/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/components/CommentEmbed.jsx";

var CommentEmbed = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(CommentEmbed, _React$Component);

  function CommentEmbed() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = CommentEmbed.prototype;

  _proto.getSrc = function getSrc() {
    var RADIX_BASE = 36;
    var post = Number(this.props.commentId).toString(RADIX_BASE);
    var parentParam = this.props.showParentComment ? '1' : '0';
    var mediaParam = this.props.showMedia ? '1' : '0';
    return "https://embed.disqus.com/p/" + post + "?p=" + parentParam + "&m=" + mediaParam;
  };

  _proto.render = function render() {
    return /*#__PURE__*/_react.default.createElement("iframe", {
      src: this.getSrc(),
      width: this.props.width,
      height: this.props.height,
      seamless: "seamless",
      scrolling: "no",
      frameBorder: "0",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 17,
        columnNumber: 13
      }
    });
  };

  return CommentEmbed;
}(_react.default.Component);

exports.default = CommentEmbed;
CommentEmbed.defaultProps = {
  width: 420,
  height: 320,
  showMedia: true,
  showParentComment: true
};
CommentEmbed.propTypes = {
  /*
   * This is used to determine the comment that gets embeded.
   * The ID can be found in the Disqus moderation panel or as a `data-post-id`
   *  attribute on the HTML element.
   */
  commentId: _propTypes.default.string.isRequired,

  /*
   * Determines the width of the embedded comment container.
   */
  width: _propTypes.default.number,

  /*
   * Determines the height of the embedded comment container.
   */
  height: _propTypes.default.number,

  /*
   * Determines whether the embedded comment should include or omit media from 
   * within the original comment.
   */
  showMedia: _propTypes.default.bool,

  /*
  * Determines whether the parent comment should be displayed for nested comments.
  */
  showParentComment: _propTypes.default.bool
};